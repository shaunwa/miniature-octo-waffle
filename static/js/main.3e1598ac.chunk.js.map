{"version":3,"sources":["Button.js","pages/ControlledFormPage.js","CounterButton.js","CongratulationsMessage.js","DisplayIf.js","pages/CounterButtonPage.js","usePersistentState.js","Greeting.js","pages/HomePage.js","ThemeContext.js","PeopleListItem.js","PeopleList.js","pages/PeopleListPage.js","pages/ProtectedPage.js","pages/NotFoundPage.js","pages/UncontrolledFormPage.js","pages/UserProfilePage.js","useUserData.js","NavBar.js","FormsNavBar.js","App.js","serviceWorker.js","index.js"],"names":["StyledButton","styled","button","props","buttonColor","Button","children","DangerButton","SuccessButton","ControlledFormPage","useState","name","setName","email","setEmail","favoriteColor","setFavoriteColor","type","placeholder","value","onChange","e","target","onClick","alert","preventDefault","CounterButton","onIncrement","numberOfClicks","useEffect","console","log","CongratulationsMessage","threshold","onHide","DisplayIf","condition","CounterButtonPage","storageKey","defaultValue","Type","localStorage","getItem","state","setState","setItem","usePersistentState","Number","setNumberOfClicks","hideMessage","setHideMessage","Greeting","numberOfMessages","greetingHeader","Date","getHours","HomePage","ThemeContext","React","createContext","PeopleListItem","person","theme","useContext","style","backgroundColor","color","className","age","hairColor","Wrapper","div","PeopleList","people","map","key","PeopleListPage","ProtectedPage","history","useHistory","push","NotFoundPage","UncontrolledFormPage","nameInput","createRef","emailInput","favoriteColorInput","ref","current","UserProfilePage","user","setUser","a","fetch","response","json","data","results","fetchUser","useUserData","first","last","NavBar","to","FormsNavBar","App","Provider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e1598ac.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n    background-color: ${props => props.buttonColor || 'transparent'};\n    border: 4px solid white;\n    border-radius: 4px;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    margin: 8px;\n    outline: none;\n    padding: 16px;\n`;\n\nexport const Button = ({ children, buttonColor, ...props }) => {\n    return (\n        <StyledButton buttonColor={buttonColor} {...props}>{children}</StyledButton>\n    );\n}\n\nexport const DangerButton = ({ children, ...props }) => {\n    return <Button buttonColor=\"red\" {...props}>{children}</Button>;\n}\n\nexport const SuccessButton = ({ children, ...props }) => {\n    return <Button buttonColor=\"green\" {...props}>{children}</Button>;\n}\n\n// export class Button extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.buttonColor = props.buttonColor;\n//     }\n\n//     render() {\n//         return (\n//             <StyledButton\n//                 buttonColor={this.buttonColor}\n//                 {...this.props}>\n//                 {this.props.children}\n//             </StyledButton>\n//         );\n//     }\n// }\n\n// export class DangerButton extends Button {\n//     constructor(props) {\n//         super(props);\n//         this.buttonColor = 'red';\n//     }\n// }\n\n// export class SuccessButton extends Button {\n//     constructor(props) {\n//         super(props);\n//         this.buttonColor = 'green';\n//     }\n// }","import React, { useState } from 'react';\nimport { SuccessButton } from '../Button';\n\nexport const ControlledFormPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [favoriteColor, setFavoriteColor] = useState('');\n\n    return (\n        <form>\n            <h3>Please enter your information:</h3>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={e => setName(e.target.value)} />\n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)} />\n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Favorite Color\"\n                    value={favoriteColor}\n                    onChange={e => setFavoriteColor(e.target.value)} />\n            </div>\n            <SuccessButton\n                onClick={e => {\n                alert(`\n                    Your name is ${name},\n                    your email is ${email},\n                    and your favorite color is ${favoriteColor}!\n                `);\n                e.preventDefault();\n            }}>Submit</SuccessButton>\n        </form>\n    )\n}","import React, { useEffect } from 'react';\nimport { DangerButton } from './Button';\n\nexport const CounterButton = ({ onIncrement, numberOfClicks = 0 }) => {\n    useEffect(() => {\n        console.log('useEffect function called!');\n    }, []);\n\n    return (\n        <>\n        <p>You've clicked the button {numberOfClicks} times</p>\n        <DangerButton onClick={onIncrement}>Click Me!</DangerButton>\n        </>\n    );\n}","import React, { useEffect } from 'react';\nimport { Button } from './Button';\n\nexport const CongratulationsMessage = ({ threshold, onHide }) => {\n    return (\n        <>\n            <h1>Congratulations! You've reached {threshold} number of clicks</h1>\n            <Button onClick={onHide}>Hide</Button>\n        </>\n    );\n}","import React from 'react';\n\nexport const DisplayIf = ({ condition, children }) => {\n    return condition\n        ? children\n        : null;\n}\n","import React, { useState, useEffect } from 'react';\nimport { CounterButton } from '../CounterButton';\nimport { CongratulationsMessage } from '../CongratulationsMessage';\nimport { DisplayIf } from '../DisplayIf';\nimport { usePersistentState } from '../usePersistentState';\n\nexport const CounterButtonPage = () => {\n    const [numberOfClicks, setNumberOfClicks] = usePersistentState('numberOfClicks', 0, Number);\n    const [hideMessage, setHideMessage] = useState(false);\n  \n    const increment = () => setNumberOfClicks(numberOfClicks + 1);\n  \n    return (\n        <>\n        <h1>The Counter Button Page</h1>\n        <DisplayIf condition={!hideMessage && numberOfClicks >= 10} >\n            <CongratulationsMessage\n                threshold={10}\n                onHide={() => setHideMessage(true)} />\n        </DisplayIf>\n        <CounterButton onIncrement={increment} numberOfClicks={numberOfClicks} />\n        </>\n    );\n}","import { useState, useEffect } from 'react';\n\nexport const usePersistentState = (storageKey, defaultValue, Type) => {\n    const [state, setState] = useState(\n        Type(localStorage.getItem(storageKey)) || defaultValue\n    );\n\n    useEffect(() => {\n        localStorage.setItem(storageKey, state);\n    }, [state]);\n\n    return [state, setState];\n}","import React from 'react';\n\nexport const Greeting = ({ name, numberOfMessages }) => {\n    if (!name) return null;\n\n    let isMorning = (new Date()).getHours() < 12;\n    let greetingHeader = isMorning\n        ? <h3>Good Morning {name}!</h3>\n        : <h3>Good Evening {name}!</h3>;\n\n    return (\n        <>\n            {greetingHeader}\n            {numberOfMessages === 0\n                ? null\n                : <p>You have {numberOfMessages} new messages</p>}\n        </>\n    );\n}\n","import React from 'react';\nimport { Greeting } from '../Greeting';\n\nexport const HomePage = () => (\n    <>\n    <h1>The Home Page</h1>\n    <Greeting name=\"Shaun\" numberOfMessages={10} />\n    </>\n);","import React from 'react';\n\nexport const ThemeContext = React.createContext('dark');","import React, { useContext } from 'react';\nimport { ThemeContext } from './ThemeContext';\nimport './PeopleListItem.css';\n\nexport const PeopleListItem = ({ person }) => {\n    const theme = useContext(ThemeContext);\n    return (\n        <div \n            style={{\n                backgroundColor: theme === 'dark' ? 'black' : 'white',\n                color: theme === 'dark' ? 'white' : 'black',\n            }}\n            className=\"list-item-container\">\n            <h3>{person.name}</h3>\n            <p>Age: {person.age}</p>\n            <p>Hair Color: {person.hairColor}</p>\n        </div>\n    );\n}","import React from 'react';\nimport { PeopleListItem } from './PeopleListItem';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    border: 2px solid white;\n    padding: 32px;\n`;\n\nexport const PeopleList = ({ people }) => (\n    <Wrapper>\n    {people.map(person => <PeopleListItem person={person} key={person.name} />)}\n    </Wrapper>\n);","import React from 'react';\nimport { PeopleList } from '../PeopleList';\n\nconst people = [{\n    name: 'John',\n    age: 40,\n    hairColor: 'brown',\n}, {\n    name: 'Helga',\n    age: 25,\n    hairColor: 'red',\n}, {\n    name: 'Dwayne',\n    age: 55,\n    hairColor: 'blonde',\n}];\n\nexport const PeopleListPage = () => (\n    <>\n        <h1>The People List Page</h1>\n        <PeopleList people={people} />\n    </>\n);","import React, { useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nexport const ProtectedPage = () => {\n    const history = useHistory();\n\n    const isAuthed = false;\n\n    useEffect(() => {\n        if (!isAuthed) {\n            history.push('/');\n        }\n    });\n    \n    return (\n        <h1>Only authed users should be able to see this!</h1>\n    );\n}","import React from 'react';\n\nexport const NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);","import React from 'react';\n\nexport const UncontrolledFormPage = () => {\n    const nameInput = React.createRef();\n    const emailInput = React.createRef();\n    const favoriteColorInput = React.createRef();\n\n    return (\n        <form>\n            <h3>Please enter your information:</h3>\n            <div>\n                <input\n                    ref={nameInput}\n                    type=\"text\"\n                    placeholder=\"Name\" />\n            </div>\n            <div>\n                <input\n                    ref={emailInput}\n                    type=\"text\"\n                    placeholder=\"Email\" />\n            </div>\n            <div>\n                <input\n                    ref={favoriteColorInput}\n                    type=\"text\"\n                    placeholder=\"Favorite Color\" />\n            </div>\n            <button onClick={e => {\n                alert(`\n                    Your name is ${nameInput.current.value},\n                    your email is ${emailInput.current.value},\n                    and your favorite color is ${favoriteColorInput.current.value}!\n                `);\n                e.preventDefault();\n            }}>Submit</button>\n        </form>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { useUserData } from '../useUserData';\n\nexport const UserProfilePage = () => {\n    const user = useUserData();\n\n    return (\n        <div>\n            <h3>Name: {user.name.first} {user.name.last}</h3>\n            <p>Email: {user.email}</p>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\n\nexport const useUserData = () => {\n    const [user, setUser] = useState({ name: {} });\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const response = await fetch('https://randomuser.me/api');\n            const data = await response.json();\n            setUser(data.results[0]);\n        }\n\n        fetchUser();\n    }, []);\n\n    return user;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const NavBar = () => (\n    <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/counter\">Counter Button</Link>\n        </li>\n        <li>\n            <Link to=\"/people-list\">People List</Link>\n        </li>\n        <li>\n            <Link to=\"/forms\">Forms</Link>\n        </li>\n        <li>\n            <Link to=\"/user\">User Profile</Link>\n        </li>\n    </ul>\n)","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const FormsNavBar = () => (\n    <ul>\n        <li>\n            <Link to=\"/forms/controlled\">Controlled</Link>\n        </li>\n        <li>\n            <Link to=\"/forms/uncontrolled\">Uncontrolled</Link>\n        </li>\n    </ul>\n);","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport {\n  HomePage,\n  CounterButtonPage,\n  PeopleListPage,\n  NotFoundPage,\n  ProtectedPage,\n  ControlledFormPage,\n  UncontrolledFormPage,\n  UserProfilePage,\n} from './pages';\nimport { UserDataLoader } from './UserDataLoader';\nimport { NavBar } from './NavBar';\nimport { FormsNavBar } from './FormsNavBar';\nimport { ThemeContext } from './ThemeContext';\nimport './App.css';\n\nfunction App() {\n  const [numberOfClicks, setNumberOfClicks] = useState(0);\n  const [hideMessage, setHideMessage] = useState(false);\n\n  const increment = () => setNumberOfClicks(numberOfClicks + 1);\n\n  return (\n    <ThemeContext.Provider value=\"dark\">\n      <div className=\"App\">\n        <Router>\n          <NavBar />\n          <div className=\"App-header\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <HomePage />\n              </Route>\n              <Route path=\"/counter\">\n                <CounterButtonPage />\n              </Route>\n              <Route path=\"/people-list\">\n                <PeopleListPage />\n              </Route>\n              <Route path=\"/protected\">\n                <ProtectedPage />\n              </Route>\n              <Route path=\"/user\">\n                <UserProfilePage />\n              </Route>\n              <Route path=\"/forms\">\n                <Router>\n                  <FormsNavBar />\n                  <Route path=\"/forms/controlled\">\n                    <ControlledFormPage />\n                  </Route>\n                  <Route path=\"/forms/uncontrolled\">\n                    <UncontrolledFormPage />\n                  </Route>\n                </Router>\n              </Route>\n              <Route>\n                <NotFoundPage />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}